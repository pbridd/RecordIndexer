package client.gui;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

import javax.swing.BoxLayout;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.ListSelectionModel;

import client.gui.quality.Checker;
import client.gui.quality.SpellCorrector.NoSimilarWordFoundException;

public class SuggestionsDialog extends JDialog implements ActionListener {

	/**
	 * Automatically generated by Eclipse 
	 */
	private static final long serialVersionUID = 4308264942596703697L;
	private Checker check;
	private String word;
	private JList<String> list;
	private JPanel dialogPanel;
	private JButton useSuggestionButton;
	private JButton cancelButton;
	
	
	public SuggestionsDialog(Checker check, String word){
		this.check = check;
		this.word = word;
		this.createComponents();
	}
	
	private void createComponents(){
		dialogPanel = new JPanel();
		JPanel topPanel = new JPanel();
		JPanel bottomPanel = new JPanel();
		
		dialogPanel.setLayout(new BorderLayout());
		bottomPanel.setLayout(new BoxLayout(bottomPanel, BoxLayout.X_AXIS));
		
		
		//set up the list
		DefaultListModel<String> listModel = new DefaultListModel<String>();
		list = new JList<String>(listModel);
		list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		topPanel.add(list);
		
		
		useSuggestionButton = new JButton("Use Suggestion");
		cancelButton = new JButton("Cancel");
		useSuggestionButton.addActionListener(this);
		cancelButton.addActionListener(this);
		
		//try to get suggestions. If none are found, then make sure the user can't
		//"choose a suggestion."
		List<String> sugs = null;;
		try {
			sugs = check.suggestSimilarWords(word);
		} catch (NoSimilarWordFoundException e) {
			//do nothing
		}
		
		//make sure the box has the right behavior
		if(sugs == null){
			useSuggestionButton.setEnabled(false);
		}
		else{
			for(String str : sugs){
				listModel.addElement(str);
			}
		}
		
	}

	@Override
	public void actionPerformed(ActionEvent arg0) {
		if(arg0.getSource() == cancelButton){
			this.dispose();
		}
		
	}

}
