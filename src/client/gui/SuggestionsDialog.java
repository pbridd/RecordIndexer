package client.gui;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;

import client.gui.quality.Checker;
import client.gui.quality.SpellCorrector.NoSimilarWordFoundException;
import client.gui.synchronization.BatchState;

public class SuggestionsDialog extends JDialog implements ActionListener {

	/**
	 * Automatically generated by Eclipse 
	 */
	private static final long serialVersionUID = 4308264942596703697L;
	private BatchState bchS;
	private Checker check;
	private String word;
	private int row;
	private int col;
	private JList<String> list;
	private JPanel dialogPanel;
	private JButton useSuggestionButton;
	private JButton cancelButton;
	private JScrollPane textScrollPane;
	
	public SuggestionsDialog(Checker check,  BatchState bchS, int row, int col){
		this.check = check;
		this.word = bchS.getValues()[row][col].getDataValue();
		this.row = row;
		this.col = col;
		this.bchS = bchS;
		this.setModal(true);
		this.setResizable(false);
		this.createComponents();
	}
	
	private void createComponents(){
		dialogPanel = new JPanel();
		JPanel topPanel = new JPanel();
		JPanel bottomPanel = new JPanel();
		
		dialogPanel.setLayout(new BoxLayout(dialogPanel, BoxLayout.Y_AXIS));
		bottomPanel.setLayout(new BoxLayout(bottomPanel, BoxLayout.X_AXIS));
		
		
		//set up the list
		DefaultListModel<String> listModel = new DefaultListModel<String>();
		list = new JList<String>(listModel);
		list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		list.setPreferredSize(new Dimension(400, 300));
		textScrollPane = new JScrollPane(list);
		textScrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
		topPanel.add(textScrollPane);
		
		
		useSuggestionButton = new JButton("Use Suggestion");
		cancelButton = new JButton("Cancel");
		useSuggestionButton.addActionListener(this);
		cancelButton.addActionListener(this);
		bottomPanel.add(Box.createGlue());
		bottomPanel.add(cancelButton);
		bottomPanel.add(Box.createRigidArea(new Dimension(5, 0)));
		bottomPanel.add(useSuggestionButton);
		bottomPanel.add(Box.createGlue());
		
		dialogPanel.add(topPanel);
		dialogPanel.add(Box.createRigidArea(new Dimension(0, 5)));
		dialogPanel.add(bottomPanel);
		this.setContentPane(dialogPanel);
		
		//try to get suggestions. If none are found, then make sure the user can't
		//"choose a suggestion."
		List<String> sugs = null;
		try {
			sugs = check.suggestSimilarWords(word);
		} catch (NoSimilarWordFoundException e) {
			//do nothing
		}
		
		//make sure the box has the right behavior
		if(sugs == null){
			useSuggestionButton.setEnabled(false);
		}
		else{
			for(String str : sugs){
				listModel.addElement(str);
			}
		}
		
	}

	@Override
	public void actionPerformed(ActionEvent arg0) {
		if(arg0.getSource() == cancelButton){
			this.dispose();
		}
		else if(arg0.getSource() == useSuggestionButton){
			if(list.getSelectedIndex() >= 0){
				String value = list.getSelectedValue();
				bchS.setValueAt(value, row, col);
				this.dispose();
			}
			else{
				JOptionPane.showMessageDialog(this, "Select a suggestion first!", 
						"You're a TA, aren't you.", JOptionPane.WARNING_MESSAGE);
			}
		}
		
	}

}
